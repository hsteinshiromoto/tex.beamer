#!/usr/bin/env bash

# This file automatically updates the versions of files pyproject.tom and CITATION.cff
# based on the latest git tag and the release branch name of the form release/vX.Y.Z

# Copy this file to .git/hooks/
PROJECT_ROOT=$(dirname $(readlink -nf post-checkout))
PROJECT_NAME=$(basename $(git remote get-url origin) | sed 's/.git//g')
BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
BRANCH_TYPE=$(echo ${BRANCH_NAME}| cut -d/ -f1)
NEXT_VERSION=$(echo ${BRANCH_NAME} | cut -d "v" -f2- | cut -d "v" -f2-)
PREVIOUS_VERSION=$(git tag -l --sort=-creatordate | head -n 1 | cut -d "v" -f2-)
CURRENT_RELEASE_DATE=$(date +%F)
PREVIOUS_RELEASE_DATE=$(git log --tags --simplify-by-decoration --pretty="format:%ai %d" | head -n 1 | cut -d " " -f1)

if [ "$BRANCH_TYPE" == "release" ]; then
	echo "Running post-checkout git hook on branch $BRANCH_NAME"

	echo "Updating version $PREVIOUS_VERSION to $NEXT_VERSION"
	sed -i "s/^version =.*/version = \'${NEXT_VERSION}\'/" ${PROJECT_ROOT}/pyproject.toml
	sed -i "s/^version:.*/version: ${NEXT_VERSION}/" ${PROJECT_ROOT}/CITATION.cff

	echo "Updating release date $PREVIOUS_RELEASE_DATE to $CURRENT_RELEASE_DATE"
	sed -i -e "s/^date-released:.*/date-released: ${CURRENT_RELEASE_DATE}/" ${PROJECT_ROOT}/CITATION.cff
fi
